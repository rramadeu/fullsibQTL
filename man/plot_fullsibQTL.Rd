% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_fullsibQTL.R
\name{plot_fullsibQTL}
\alias{plot_fullsibQTL}
\title{Multiple Graphics of QTLs Mapping}
\usage{
plot_fullsibQTL(
  fullsib = NULL,
  fullsib.scan = NULL,
  r2ls.out = NULL,
  qtlmapping = NULL,
  lgs = NULL,
  thr = NULL,
  grayscale = FALSE,
  interact = FALSE,
  file = "fullsibQTL.html",
  folder = getwd(),
  browser = TRUE,
  height = NULL,
  width = NULL,
  qtlmapping.colors = NULL
)
}
\arguments{
\item{fullsib}{An object from class \code{fullsib}.}

\item{fullsib.scan}{An object or a list of objects from class
\code{fullsib_scan}.}

\item{r2ls.out}{An object or a list of objects from class \code{r2ls_out}.}

\item{qtlmapping}{character vector with the name(s) of \code{fullsib.scan}
objects to be ploted.  If \code{qtlmapping=NULL} plot generic names}

\item{lgs}{Numeric vector with the LGs to be plot. Default is to plots all
LGs.}

\item{thr}{Numeric vector with threshold values to be plot as lines, similar
to \code{abline()}.}

\item{grayscale}{If \code{TRUE} plots in a gray scale in order to make BW
figures.}

\item{interact}{If \code{TRUE} plots a interactive graphic in a \code{html}
file.}

\item{file}{A string. if \code{interact=TRUE}, the \code{html} name to be
plot.}

\item{folder}{A string. If \code{interact=TRUE}, the folder where the created
\code{html} will be located. \code{default=getwd()}.}

\item{browser}{If \code{browser=TRUE}, open the generated \code{html}.}

\item{height}{numeric argument to be passed for \pkg{plotly}::\code{\link{ggplotly}} internal. Default is
1000 pixels.}

\item{width}{numeric argument to be passed for \pkg{plotly}::\code{\link{ggplotly}} internal. Default is
(250 x number of LGs) pixels.}

\item{map_plot}{can be "map" or c("map","lod"). Default="map". Use c("map","lod") if high density map.}

\item{qtlmapping.colors}{string vector with the color names for each LG, argument will be passed for 
\pkg{ggplot2}::\code{\link{scale_color_manual}}.}
}
\value{
The resulting graphic is divided per linkage group, it has the map
representantion at the bottom, a curve for each one of the \code{fullsib.scan} 
arguments. It can also have the QTL representation for each curve. If the user
sets interact argument for \code{TRUE}, it will have the features of \pkg{plotly} 
package as select, zoom, pan, enable/disable curves, it is also include in the 
tooltip information of LOD, QTL estimated effect, position, etc.
}
\description{
Given one or more results from 'im_scan' or 'cim_scan' returns a graphic
with profiles and map. There is also the possibility to plot QTL positions
and effects.
}
\details{
This function first merge the data in a tidy data frame the with
\code{\link[fullsibQTL]{tidy_fullsibQTL}}. Then, it makes the respectively
plot. The plot is built using \pkg{ggplot2} engine, the interact plot uses
\pkg{plotly}. If you are using the interact option with RStudio, it is
recommend to plot outside teh RStudio in a browser (e.g. Chrome, Firefox).
The returning is a \pkg{ggplot2} object or a \pkg{plotly} object, you can
add customizations at them. About how they were made, look at the raw code
it is fully commented. You can easily online publish your plot, visit
\url{https://plot.ly/r/} to more information. For a complete tutorial, see the vignette:

\code{vignette("Tutorial_fullsibQTL", package = "fullsibQTL")}

The \code{tidy_fullsib} function is an interval (but user available) function to merge and transforms the input data in tidy
format.
}
\examples{

  library( fullsibQTL )
  data( "example_QTLfullsib" )
  fullsib <- create_fullsib( example_QTLfullsib,
                             list( LG1_final, LG2_final, LG3_final, LG4_final ),
                             step = 1, map.function = "kosambi", condIndex = 3.5 )

  ## IM
  im <- im_scan( fullsib )
  qtls.im <- r2_ls( fullsib, pheno.col = 1, lg = c( 1, 1, 2, 2, 2, 3, 3, 4 ),
                    pos = c( "loc13", "M12", "loc45", "loc77", "loc108", "M33", "loc65", "M52" ) )
  ## CIM
  cofs.fs <- cof_selection( fullsib, pheno.col = 1, k = log( 300 ), n.cofactor = 10 )
  cim <- cim_scan( cofs.fs )
  qtls.cim <- r2_ls( fullsib, pheno.col = 1, lg = c( 1, 1, 2, 2, 2, 3, 3, 4 ),
                    pos = c( "loc13", "M12", "loc45", "loc77", "loc108", "M33", "loc65", "M52" ) )

  ## Minimal plot
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ) )
  
  ## QTL plot
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, qtls.im ) )
                   
  ## QTL plotjust r2ls.out object from cim (replace the qtls.im by NULL)
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, NULL ) )
  
  ## Customizing
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, qtls.im ),
                   qtlmapping = c( "cim", "im" ) )
                  
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, qtls.im ),
                   qtlmapping = c( "cim", "im" ),
                   grayscale = TRUE,
                   thr = c( 3.5, 4 ) )
                  
  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, qtls.im ),
                   qtlmapping = c( "cim", "im" ),
                   interact = TRUE )

  plot_fullsibQTL( fullsib = fullsib,
                   fullsib.scan = list( cim, im ),
                   r2ls.out = list( qtls.cim, qtls.im ),
                   qtlmapping = c( "cim", "im" ),
                   qtlmapping.colors = c( "dark green", "purple" ) )
                   

}
\seealso{
\code{\link[fullsibQTL]{create_fullsib}}
\code{\link[fullsibQTL]{im_scan}}
\code{\link[fullsibQTL]{cim_scan}}
\code{\link[fullsibQTL]{r2_ls}}
\code{\link[fullsibQTL]{tidy_fullsibQTL}}
\code{\link[ggplot2]{ggplot}}
\code{\link[plotly]{ggplotly}}
}
\author{
Rodrigo Amadeu, \email{rramadeu@gmail.com}
}
\keyword{utilities}
